<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github图片不显示</title>
      <link href="2021/01/17/github-tu-pian/"/>
      <url>2021/01/17/github-tu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="github图片不显示问题："><a href="#github图片不显示问题：" class="headerlink" title="github图片不显示问题："></a>github图片不显示问题：</h1><p>C:\Windows\System32\drivers\etc\hosts:</p><p>修改权限</p><p>末行加入：<br>140.82.114.4    github.com </p><p>140.82.113.3    gist.github.com</p><p>199.232.28.133    assets-cdn.github.com</p><p>199.232.28.133    raw.githubusercontent.com</p><p>199.232.28.133    gist.githubusercontent.com</p><p>199.232.28.133    cloud.githubusercontent.com</p><p>199.232.28.133    camo.githubusercontent.com</p><p>199.232.28.133    avatars0.githubusercontent.com</p><p>199.232.28.133    avatars1.githubusercontent.com</p><p>199.232.28.133    avatars2.githubusercontent.com</p><p>199.232.28.133    avatars3.githubusercontent.com</p><p>199.232.28.133    avatars4.githubusercontent.com</p><p>199.232.28.133    avatars5.githubusercontent.com</p><p>199.232.28.133    avatars6.githubusercontent.com</p><p>199.232.28.133    avatars7.githubusercontent.com</p><p>199.232.28.133    avatars8.githubusercontent.com</p><hr>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题</title>
      <link href="2021/01/17/hexo-zhu-ti/"/>
      <url>2021/01/17/hexo-zhu-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li>当你看到这里的时候，应该已经有一个自己的 Hexo 博客了。如果还没有的话，不妨使用 Hexo 和 Markdown 来写博客和文章。</li></ul><ul><li><p>点击 <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/" title="这里">这里</a> 下载 master 分支的最新稳定版的代码，解压缩后，将 hexo-theme-matery 的文件夹复制到你 Hexo 的 themes 文件夹中即可。<br>当然你也可以在你的 themes 文件夹下使用 Git clone 命令来下载:</p><p>  bash<br>  git clone <a href="https://github.com/blinkfox/hexo-theme-matery.git">https://github.com/blinkfox/hexo-theme-matery.git</a></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2></li><li><p>修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery_config.yml 文件的其它修改建议:</p></li><li><p>请修改 _config.yml 的 url 的值为你的网站主 URL（如：<a href="http://xxx.github.io)./">http://xxx.github.io）。</a></p></li><li><p>建议修改两个 per_page 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。</p></li><li><p>如果你是中文用户，则建议修改 language 的值为 zh-CN。</p></li></ul><h2 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h2><p>categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>bashhexo new page &quot;categories&quot;</code></pre><p>编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><h2 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h2><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>bashhexo new page &quot;tags&quot;</code></pre><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</p><p>yaml<br>    —<br>    title: tags<br>    date: 2018-09-30 18:23:38<br>    type: “tags”<br>    layout: “tags”<br>    —</p><h2 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h2><p>about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>bashhexo new page &quot;about&quot;</code></pre><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><p>yaml<br>    —<br>    title: about<br>    date: 2018-09-30 17:25:30<br>    type: “about”<br>    layout: “about”<br>    —</p><h2 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h2><p>friends 页是用来展示友情连接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>bashhexo new page &quot;friends&quot;</code></pre><p>编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容：</p><p>yaml<br>    —<br>    title: friends<br>    date: 2018-12-12 21:25:30<br>    type: “friends”<br>    layout: “friends”<br>    —<br>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p><p>json：</p><pre><code>[&#123;&quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,&quot;name&quot;: &quot;码酱&quot;,&quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,&quot;url&quot;: &quot;http://luokangyuan.com/&quot;,&quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;&quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,&quot;name&quot;: &quot;闪烁之狐&quot;,&quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,&quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,&quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;&quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,&quot;name&quot;: &quot;ja_rome&quot;,&quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,&quot;url&quot;: &quot;ttps://me.csdn.net/jlh912008548&quot;,&quot;title&quot;: &quot;前去学习&quot;&#125;]</code></pre><p>若链接图片不显示参照我的博客篇<a href="https://qidianzhj.github.io/2021/01/17/github-tu-pian/">github图片不显示</a>，并更改图片链接。</p><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre><code>bashnpm i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><p>yaml<br>highlight:<br>  enable: false</p><p>prism_plugin:<br>  mode: ‘preprocess’# realtime/preprocess<br>  theme: ‘tomorrow’<br>  line_number: false# default false<br>  custom_css:</p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre><code>bashnpm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>yaml<br>    search:<br>      path: search.xml<br>      field: post</p><h2 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h2><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre><code>bashnpm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>yaml<br>    permalink_pinyin:<br>      enable: true<br>      separator: ‘-‘ # default: ‘-‘<br>注：除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。</p><h2 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h2><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>安装命令如下：</p><pre><code>bashnpm i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可：</p><p>yaml<br>    wordCount:<br>      enable: false # 将这个值设置为 true 即可.<br>      postWordCount: true<br>      min2read: true<br>      totalCount: true</p><h2 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h2><p>本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下：</p><pre><code>bashnpm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>yaml<br>    feed:<br>      type: atom<br>      path: atom.xml<br>      limit: 20<br>      hub:<br>      content:<br>      content_limit: 140<br>      content_limit_delim: ‘ ‘<br>      order_by: -date<br>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。</p><h2 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h2><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。</p><h2 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h2><p>在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，你可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><p>html</p><a href="https://github.com/blinkfox" class="tooltipped" target="_blank" data-tooltip="访问我的GitHub" data-position="top" data-delay="50"><i class="fa fa-github"></i></a><p>其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考：</p><pre><code>Facebook: fa-facebookTwitter: fa-twitterGoogle-plus: fa-google-plusLinkedin: fa-linkedinTumblr: fa-tumblrMedium: fa-mediumSlack: fa-slack新浪微博: fa-weibo微信: fa-wechatQQ: fa-qq</code></pre><p>注意: 本主题中使用的 Font Awesome 版本为 4.7.0。</p><h2 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h2><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 source 目录下的 _data 目录（没有的话就新建一个）中新建 musics.json 文件，文件内容如下所示：</p><p>json</p><pre><code>[&#123;    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http://xxx.com/music1.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover1.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;/medias/music/music2.mp3&quot;,    &quot;cover&quot;: &quot;/medias/music/cover2.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http://xxx.com/music3.mp3&quot;,    &quot;cover&quot;: &quot;http://xxx.com/music-cover3.png&quot;&#125;]</code></pre><p>注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p><p>然后，在主题的 _config.yml 配置文件中激活配置即可：</p><p>yaml</p><h1 id="是否在首页显示音乐"><a href="#是否在首页显示音乐" class="headerlink" title="是否在首页显示音乐."></a>是否在首页显示音乐.</h1><pre><code>music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度</code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/11/hello-world/"/>
      <url>2021/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux——虚拟机安装</title>
      <link href="2021/01/01/linux-xu-ni-ji/"/>
      <url>2021/01/01/linux-xu-ni-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-16-04-安装："><a href="#Ubuntu-16-04-安装：" class="headerlink" title="Ubuntu 16.04 安装："></a>Ubuntu 16.04 安装：</h1><p><a href="http://www.baidu.com/" title="百度">http://www.baidu.com</a></p><p><em><a href="https://blog.csdn.net/kellyroslyn/article/details/91607520">https://blog.csdn.net/kellyroslyn/article/details/91607520</a></em><br>界面显示不全， 左手按住alt键右手鼠标往上拖动安装界面，即可显示完全内容</p><h1 id="vmware-Tools-安装："><a href="#vmware-Tools-安装：" class="headerlink" title="vmware Tools 安装："></a>vmware Tools 安装：</h1><p><a href="https://blog.csdn.net/weixin_37182342/article/details/80236632?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task">https://blog.csdn.net/weixin_37182342/article/details/80236632?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a> </p><h2 id="桥接模式设置，解决连不上网的问题"><a href="#桥接模式设置，解决连不上网的问题" class="headerlink" title="桥接模式设置，解决连不上网的问题"></a>桥接模式设置，解决连不上网的问题</h2><ol><li><a href="https://blog.csdn.net/Mr_jianfeng/article/details/81053849/">https://blog.csdn.net/Mr_jianfeng/article/details/81053849/</a><h2 id="安装谷歌中文输入法："><a href="#安装谷歌中文输入法：" class="headerlink" title="安装谷歌中文输入法："></a>安装谷歌中文输入法：</h2></li><li><a href="https://blog.csdn.net/lybhit/article/details/78663731">https://blog.csdn.net/lybhit/article/details/78663731</a></li><li>mqtt</li><li><a href="https://blog.csdn.net/jsjwr/article/details/78800202">https://blog.csdn.net/jsjwr/article/details/78800202</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCB原理图</title>
      <link href="2021/01/01/pcb/"/>
      <url>2021/01/01/pcb/</url>
      
        <content type="html"><![CDATA[<h1 id="绘制PCB-library-模型原件库-和Schematic-library（原理图原件库）"><a href="#绘制PCB-library-模型原件库-和Schematic-library（原理图原件库）" class="headerlink" title="绘制PCB_library(模型原件库)和Schematic_library（原理图原件库）"></a>绘制PCB_library(模型原件库)和Schematic_library（原理图原件库）</h1><p>原件资源上网可查<br>pcb模型原件： 3D CAD 模型、2D  (注意要选step文件)<br>或者导入proe自己制作的模型，place-&gt;3d body  -&gt;properties-&gt;generic-&gt;choose<br><img src="http://n.sinaimg.cn/sinacn10112/566/w1018h1148/20191111/fd6e-iieqapt6530904.jpg" alt="avatar"></p><p><img src="https://raw.githubusercontent.com/Qidianzhj/qidianzhj.github.io/master/medias/banner/0.jpg"><br>制作原理图时，要注意引脚的接线端在外面：</p><p>绘制工具栏可在view-&gt;roolbar里找。</p><h1 id="现实制作："><a href="#现实制作：" class="headerlink" title="现实制作："></a>现实制作：</h1><p>①,new -&gt; project-&gt; pcb project<br>②, 项目处右键-&gt;add existing to project..    向项目导入自己的pcb_library和schematic_library<br>③，项目处右键_&gt;add new to project-&gt;  pcb  或 schematic<br>④，首先绘制原理图，右下角panel（面板）-&gt;components（在里面选择schematic库的原件）<br>注意绘制工具栏的placeware(原件之间的线)  和place line（边框等）</p><h2 id="两端输入输出连接器注意："><a href="#两端输入输出连接器注意：" class="headerlink" title="两端输入输出连接器注意："></a>两端输入输出连接器注意：</h2><p>原理图绘制完毕，双击原件，给每个原件添加模型（先删除默认的仿生模型）</p><h1 id="给原件加编号："><a href="#给原件加编号：" class="headerlink" title="给原件加编号："></a>给原件加编号：</h1><p>点击右下角accept changes</p><p>⑤，给每个原件添加指定的PCB封装模型，并删除之前的封装。</p><p>⑥，导出原理图至PCB<br>design-&gt;import changes from …<br>去除相关干扰：  选中  -&gt;右键  -&gt;find similar object-&gt;</p><p>隐藏GUN线，方便布线，GUN线最后铺铜皮的时候做<br>view-&gt;connectoins-&gt;hide net  左键选中GUN</p><p>按照原理图摆放原件，注意根据电流大小，设计线的粗细</p><p>加板：<br>在keepout层  设计：</p><p>画出闭合的框，左键选中，右键find similar object，   design-&gt; board shape -&gt;define from select objects  </p><h1 id="设计规则："><a href="#设计规则：" class="headerlink" title="设计规则："></a>设计规则：</h1><p>design-&gt; rules-&gt;<br>间隙：</p><p>线宽：</p><p>过孔大小：</p><p>铺铜皮：<br>给原件加绝缘层</p><p>其余（过孔）：</p><p>布线：</p><p>右键点中原件，shift+空格调整，右键点中另一原件（tab 暂停 可设置属性）。<br>不好连的线可选择打过孔的方式通过bottom走线。<br>例如：<br>place -&gt; via  在top层选择打孔<br>到 bottom 层连线。</p><p>再次加框，使其完整干净。</p><h1 id="设置GUN，铺铜皮"><a href="#设置GUN，铺铜皮" class="headerlink" title="设置GUN，铺铜皮"></a>设置GUN，铺铜皮</h1><p>view-&gt; connections-&gt;show net  -&gt; 左键GUN    显示与GUN的连线。</p><p>place -&gt;polygon pour..-&gt;左键依次选中框的四个角（shift   空格 设置为直角） -&gt;tab _&gt;设置top层 GUN的net网络铺铜皮，加绝缘层（铜皮容易散热，绝缘层就是没有铜皮，保温）</p><p>在给bottom层铺铜皮，同上。</p><p>为了更好的利用剩余的大面积铜皮，我们可以多打几个过孔来增强它的电流通道的强度，使其可以承受更强的电流。打完孔之后，要重新铺铜皮。</p><p>保存，可通过file -&gt;export-&gt;steop3D   step导出，proe打开设计<br>或  pdf 3D pdf导出。</p><h1 id="快捷键："><a href="#快捷键：" class="headerlink" title="快捷键："></a>快捷键：</h1><p>shift 空格 ：  切换模式；<br>左键选中  空格  ：旋转<br>q：英制mill 和公制 mm 切换<br>g： 画板最小移动单位。</p><p>   <code>还好吧国际化</code></p>]]></content>
      
      
      <categories>
          
          <category> PCB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCB原理图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绝对路径相关及JVM、JRE、JDK</title>
      <link href="2021/01/01/jue-dui-lu-jing/"/>
      <url>2021/01/01/jue-dui-lu-jing/</url>
      
        <content type="html"><![CDATA[<h2 id="使用绝对路径的方式引入CSS文件"><a href="#使用绝对路径的方式引入CSS文件" class="headerlink" title="使用绝对路径的方式引入CSS文件"></a>使用绝对路径的方式引入CSS文件</h2><p>$ <link rel="stylesheet" href="${pageContext.request.contextPath}/themes/default/css/ueditor.css" type="text/css"/></p><h2 id="使用绝对路径的方式引入JavaScript脚本"><a href="#使用绝对路径的方式引入JavaScript脚本" class="headerlink" title="使用绝对路径的方式引入JavaScript脚本"></a>使用绝对路径的方式引入JavaScript脚本</h2><p>$ <script type="text/javascript" src="{pageContext.request.contextPath}/ueditor1_3_6-gbk-jsp/ueditor.config.js"></script></p><p>#<script type="text/javascript" src="<%=request.getContextPath()%>/ueditor1_3_6-gbk-jsp/ueditor.all.js"></script><br>${pageContext.request.contextPath}与&lt;%getContextPath%&gt;效果相同。<br>取出部署的应用程序名，这样不管如何部署，所用路径都是正确的。</p><h2 id="JRE-–-java-runtime-environment"><a href="#JRE-–-java-runtime-environment" class="headerlink" title="JRE – java runtime environment"></a>JRE – java runtime environment</h2><p>   JRE是指java运行环境。光有JVM还不能成class的执行，因为在解释class的时候JVM需要调用解释所需要的类库lib。在JDK的安装目录里你可以找到jre目录，里面有两个文件夹bin和lib,在这里可以认为bin里的就是jvm，lib中则是jvm工作所需要的类库，而jvm和 lib和起来就称为jre。所以，在你写完java程序编译成.class之后，你可以把这个.class文件和jre一起打包发给朋友，这样你的朋友就可以运行你写程序了。（jre里有运行.class的java.exe）</p><h2 id="JDK-–-java-development-kit"><a href="#JDK-–-java-development-kit" class="headerlink" title="JDK – java development kit"></a>JDK – java development kit</h2>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
